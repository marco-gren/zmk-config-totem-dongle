#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Nav         1
#define Umlaut      2

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        unicode_plain: unicode_plain {
            compatible = "zmk,behavior-unicode";
            label = "UNICODE_PLAIN";
            #binding-cells = <1>;
            unicode-map = <
                0x00E4  // 0 - ä
                0x00F6  // 1 - ö
                0x00FC  // 2 - ü
                0x00C4  // 3 - Ä
                0x00D6  // 4 - Ö
                0x00DC  // 5 - Ü
                0x00DF  // 6 - ß
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_a_umlaut {
            timeout-ms = <50>;
            key-positions = <11 20>; // A + LALT
            bindings = <&unicode_plain 0>; // ä
        };

        combo_o_umlaut {
            timeout-ms = <50>;
            key-positions = <28 20>; // O + LALT
            bindings = <&unicode_plain 1>; // ö
        };

        combo_u_umlaut {
            timeout-ms = <50>;
            key-positions = <6 20>; // U + LALT
            bindings = <&unicode_plain 2>; // ü
        };

        combo_A_umlaut_upper {
            timeout-ms = <50>;
            key-positions = <11 20 3>; // A + LALT + LSHIFT
            bindings = <&unicode_plain 3>; // Ä
        };

        combo_O_umlaut_upper {
            timeout-ms = <50>;
            key-positions = <28 20 3>; // O + LALT + LSHIFT
            bindings = <&unicode_plain 4>; // Ö
        };

        combo_U_umlaut_upper {
            timeout-ms = <50>;
            key-positions = <6 20 3>; // U + LALT + LSHIFT
            bindings = <&unicode_plain 5>; // Ü
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
         &kp Q       &kp W       &kp E          &kp R         &kp T        &kp Z    &kp U        &kp I        &kp O       &kp P
         &hm LGUI A  &hm LALT S  &hm LCTRL D    &hm LSHIFT F  &kp G        &kp H    &hm RSHFT J  &hm RCTRL K  &hm RALT L  &hm RGUI HASH
&kp ESC  &kp Y       &kp X       &kp C          &kp V         &kp B        &kp N    &kp M        &kp COMMA    &kp DOT     &kp MINUS      &mo Umlaut
                                 &mt LCTRL DEL  &lt 0 TAB     &kp SPACE    &kp RET  &lt 0 BSPC   &kp MINUS
            >;
        };

        Nav {
            display-name = "Nav";
            bindings = <
              &kp TILDE       &trans     &kp UP_ARROW  &trans     &kp LBRC    &kp RBRC  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
              &kp LEFT_SHIFT  &kp LEFT   &kp DOWN      &kp RIGHT  &kp LBKT    &kp RBKT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&kp LEFT_ALT  &kp LEFT_WIN    &kp MINUS  &trans        &kp PLUS   &kp LPAR    &kp RPAR  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &kp PLUS
                                         &trans        &trans     &trans      &trans    &trans        &kp DOT
            >;
        };

        Umlaut {
            display-name = "Umlauts";
            bindings = <
        &trans  &trans  &trans  &trans  &trans     &trans    &unicode_plain 2   &trans     &unicode_plain 1  &trans
        &unicode_plain 0  &unicode_plain 3  &unicode_plain 4  &unicode_plain 5  &unicode_plain 6  &trans    &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans     &trans    &trans     &trans     &trans     &trans     &trans     &trans
                          &trans  &trans  &trans     &trans     &trans     &trans
            >;
        };
    };
};
