//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        
        // German umlaut behaviors
        de_umlaut_a: german_umlaut_a {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_UMLAUT_A";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp LS(SINGLE_QUOTE)>;
            mods = <(MOD_LALT)>;
        };
        
        de_umlaut_o: german_umlaut_o {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_UMLAUT_O";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp LS(SEMICOLON)>;
            mods = <(MOD_LALT)>;
        };
        
        de_umlaut_u: german_umlaut_u {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_UMLAUT_U";
            #binding-cells = <0>;
            bindings = <&kp U>, <&kp SEMICOLON>;
            mods = <(MOD_LALT)>;
        };
        
        de_eszett: german_eszett {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_ESZETT";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp MINUS>;
            mods = <(MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

    Base {
        label = "QWERTZ";
        bindings = <
                &kp Q       &kp W       &kp E         &kp R         &kp T                         &kp Z        &de_umlaut_u     &kp I       &de_umlaut_o               &kp P               
                &de_umlaut_a  &hm LGUI de_eszett  &hm LALT D   &hm LCTRL F  &kp G                 &kp H        &hm RCTRL J      &hm RALT K  &hm RGUI L  &kp SEMICOLON  
        &trans  &kp Y       &kp X       &kp C         &kp V         &kp B                         &kp N        &kp M            &kp COMMA   &kp DOT     &kp MINUS      &trans
                                        &lt 1 ESCAPE  &lt 2 TAB     &lt 3 SPACE                   &lt 4 BACKSPACE  &lt 5 ENTER  &lt 6 DELETE
        >;
    };

    Media {
        label = "Media";
        bindings = <
                &trans       &trans       &trans        &trans        &trans                      &trans            &trans             &trans           &trans           &trans  
                &kp LGUI     &kp LALT     &kp LCTRL     &kp LSHIFT    &trans                      &trans            &kp C_PREVIOUS     &kp C_VOLUME_DOWN &kp C_VOLUME_UP  &kp C_NEXT  
        &trans  &trans       &trans       &trans        &trans        &trans                      &trans            &trans             &trans           &trans           &trans       &trans
                                          &trans        &trans        &trans                      &kp C_STOP        &kp C_PLAY_PAUSE   &trans  
        >;
    };

    Nav {
        label = "Nav";
        bindings = <
                &kp DELETE   &trans       &kp UP        &trans        &trans                      &trans            &kp HOME           &kp PAGE_DOWN    &kp PAGE_UP      &kp END  
                &kp LGUI     &kp LEFT     &kp DOWN      &kp RIGHT     &kp SQT                     &kp CAPS          &kp LEFT           &kp DOWN         &kp UP           &kp RIGHT  
        &trans  &kp GRAVE    &kp TILDE    &kp EQUAL     &kp PLUS      &kp C_PLAY_PAUSE            &kp INSERT        &kp HOME           &kp PAGE_DOWN    &kp PAGE_UP      &kp END       &trans
                                          &trans        &trans        &trans                      &kp DELETE        &kp ENTER          &trans
        >;
    };

    Mouse {
        label = "German";
        bindings = <
                &kp RA(N8)   &kp RA(N7)   &kp RA(N0)    &kp RA(N9)    &kp RA(MINUS)              &kp RA(Q)         &kp LS(SINGLE_QUOTE) &kp RA(U)      &kp LS(SEMICOLON) &kp RA(P)  
                &kp RA(L)    &kp MINUS    &kp SLASH     &kp RA(S)     &kp RA(EQUAL)              &kp RA(LBKT)      &kp RA(RBKT)       &kp RA(BSLH)    &kp RA(GRAVE)    &kp RA(APOS)  
        &trans  &kp RA(Z)    &kp RA(X)    &kp RA(C)     &kp RA(V)     &kp RA(B)                  &kp RA(N)         &kp RA(M)          &kp RA(COMMA)   &kp RA(DOT)      &kp RA(SLASH) &trans
                                          &trans        &trans        &trans                      &trans            &trans             &trans
        >;
    };

    Sym {
        label = "Sym";
        bindings = <
                &kp EXCL     &kp AT       &kp HASH      &kp DOLLAR    &kp PERCENT                 &kp CARET         &kp AMPERSAND      &kp ASTERISK    &kp LPAR         &kp RPAR  
                &kp COLON    &kp DOLLAR   &kp PERCENT   &kp CARET     &kp PLUS                    &kp MINUS         &kp EQUAL          &kp LBRC        &kp RBRC         &kp PIPE  
        &trans  &kp TILDE    &kp EXCL     &kp AT        &kp HASH      &kp PIPE                    &kp UNDER         &kp PLUS           &kp LBKT        &kp RBKT         &kp BSLH      &trans
                                          &kp LPAR      &kp RPAR      &kp UNDER                   &kp LBRC          &kp RBRC           &kp GRAVE
        >;
    };

    Num {
        label = "Num";
        bindings = <
                &kp LBKT     &kp N7       &kp N8        &kp N9        &kp RBKT                    &trans            &trans             &trans          &trans           &trans  
                &kp SEMI     &kp N4       &kp N5        &kp N6        &kp EQUAL                   &trans            &kp RSHIFT         &kp RCTRL       &kp RALT         &kp RGUI  
        &trans  &kp GRAVE    &kp N1       &kp N2        &kp N3        &kp BSLH                    &trans            &trans             &trans          &trans           &trans       &trans
                                          &kp DOT       &kp N0        &kp MINUS                   &trans            &trans             &trans
        >;
    };

    Fun {
        label = "Fun";
        bindings = <
                &kp F12      &kp F7       &kp F8        &kp F9        &kp PRINTSCREEN             &kp LC(LA(DEL))   &kp LC(LS(ESCAPE)) &kp LC(SPACE)   &kp LG(SPACE)    &kp LG(LS(N4))  
                &kp F11      &kp F4       &kp F5        &kp F6        &kp SCROLLLOCK              &kp LG(TAB)       &kp RSHIFT         &kp RCTRL       &kp RALT         &kp RGUI  
        &trans  &kp F10      &kp F1       &kp F2        &kp F3        &kp PAUSE_BREAK             &kp LG(GRAVE)     &kp LG(LBKT)       &kp LG(RBKT)    &kp LG(LS(LBKT)) &kp LG(LS(RBKT)) &trans
                                          &kp C_MENU    &kp TAB       &kp SPACE                   &trans            &trans             &trans
        >;
    };

    Button {
        label = "Button";
        bindings = <
                &bt BT_CLR         &bootloader  &trans     &trans      &bt BT_SEL 0         &trans      &trans     &trans  &bootloader    &trans  
                &kp LGUI           &kp LALT     &kp LCTRL  &kp LSHIFT  &bt BT_SEL 1         &trans  &kp RSHIFT  &kp RCTRL     &kp RALT  &kp RGUI  
        &trans  &ext_power EP_TOG  &trans       &trans     &trans      &bt BT_SEL 2         &trans      &trans     &trans       &trans    &trans  &trans
                                                &trans     &trans      &trans               &trans      &trans     &trans
        >;
    };

    Game {
        label = "Game";
        bindings = <
                &kp TAB         &kp Z  &kp X       &kp C         &kp V            &trans  &trans  &trans  &trans  &trans  
                &kp LEFT_SHIFT  &kp Q  &kp W       &kp E         &kp R            &trans  &trans  &trans  &trans  &trans  
        &trans  &kp LCTRL       &kp A  &kp S       &kp D         &kp F            &trans  &trans  &trans  &trans  &trans  &trans
                                       &kp LALT    &lt 9 ESCAPE  &kp SPACE        &trans  &trans  &trans
        >;
    };

    Gameplus {
        label = "Gameplus";
        bindings = <
                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5        &trans  &trans  &trans  &trans  &trans  
                &kp G         &trans        &trans        &trans        &kp T               &trans  &trans  &trans  &trans  &trans  
        &trans  &kp TAB       &trans        &trans        &trans        &kp B               &trans  &trans  &trans  &trans  &trans  &trans
                                            &kp ESCAPE    &trans        &tog 8              &trans  &trans  &trans
        >;
    };
  };
};